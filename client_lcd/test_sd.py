# from picamera2 import Picamera2
# import time
# import os

# # üìÇ Th∆∞ m·ª•c l∆∞u ·∫£nh
# SAVE_DIR = "captured_images"
# os.makedirs(SAVE_DIR, exist_ok=True)

# # üì∑ Kh·ªüi t·∫°o camera
# picam2 = Picamera2()
# config = picam2.create_preview_configuration()
# picam2.configure(config)
# picam2.start()

# print("üì∏ Camera started. Capturing every 5 frames...")

# frame_count = 0
# image_count = 0

# try:
#     while True:
#         # Ch·ª•p frame hi·ªán t·∫°i (kh√¥ng l∆∞u)
#         frame = picam2.capture_array()
#         frame_count += 1

#         # C·ª© m·ªói 5 frame ‚Üí l∆∞u 1 ·∫£nh
#         # if frame_count % 5 == 0:
#         filename = f"image_{image_count:06d}.jpg"
#         filepath = os.path.join(SAVE_DIR, filename)
#         picam2.capture_file(filepath)
#         print(f"‚úÖ Saved {filename}")
#         image_count += 1

#         # T·ªëc ƒë·ªô khung h√¨nh (ƒëi·ªÅu ch·ªânh n·∫øu mu·ªën ch·ª•p nhanh h∆°n)
#         time.sleep(0.2)

# except KeyboardInterrupt:
#     print("\n Stopped by user.")
# finally:
#     picam2.stop()
#     print(" Camera stopped.")


from picamera2 import Picamera2
import time, os

SAVE_DIR = "captured_images"
os.makedirs(SAVE_DIR, exist_ok=True)

picam2 = Picamera2()

# üß† C·∫•u h√¨nh ch·ª•p: main stream l√† JPEG, raw stream l√† Bayer (RAW)
config = picam2.create_still_configuration(
    main={"size": (4056, 3040), "format": "BGR888"},  # ·∫£nh m√†u hi·ªÉn th·ªã
    raw={"size": (4056, 3040)}  # ·∫£nh RAW c·∫£m bi·∫øn
)
picam2.configure(config)
picam2.start()

print("üì∏ Camera started. Capturing RAW + JPEG every 5 frames...")

frame_count = 0
image_count = 0

try:
    while True:
        frame_count += 1
        # n·∫øu ·ª¶n ch·ªâ mu·ªën l∆∞u m·ªói 5 frame
        # if frame_count % 5 == 0:
        base = f"image_{image_count:06d}"
        jpeg_path = os.path.join(SAVE_DIR, f"{base}.jpg")
        raw_path = os.path.join(SAVE_DIR, f"{base}.dng")

        # ‚ú® L∆∞u ·∫£nh JPEG + RAW
        metadata = picam2.capture_file(jpeg_path)
        picam2.capture_metadata_(raw_path)

        print(f"‚úÖ Saved {base}.jpg & {base}.dng")
        image_count += 1

        time.sleep(0.2)

except KeyboardInterrupt:
    print("\nüõë Stopped by user.")
finally:
    picam2.stop()
    print("üì∑ Camera stopped.")
